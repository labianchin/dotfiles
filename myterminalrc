
# Bash/ZSH custom configurations
# vim: ft=sh syntax=sh

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export EDITOR=vim
export VISUAL=vim

# === Simple custom aliases

alias rsync2="rsync -avz --delete --progress"
alias sshProxySocks="ssh -CNf -D 1234"
alias vdu="vagrant destroy -f && vagrant up"
alias gitsearch="git rev-list --all | xargs git grep -F"
alias v="vim"
function ssh-copy-pub { cat ~/.ssh/id_rsa.pub | ssh $@ "mkdir -p ~/.ssh; cat >> ~/.ssh/authorized_keys"; }

# === Tmux aliases
alias tma="tmux attach -d -t"
alias tmn="tmux new -s \$(basename \$(pwd))"
alias tml="tmux list-sessions"

# === Java aliases
alias java_ls="/usr/libexec/java_home -Vq 2>&1 | grep -E '\d\.\d\.\d(_\d+)?.*,' | cut -d , -f 1 | cut -c 5-"

alias apassword="openssl rand -base64"
alias shortcuts="stty -a | awk 'BEGIN{RS=\"[;\n]+ ?\"}; /= ..$/'"

# === OS Specific config
case `uname -s` in
  Darwin)
    [[ -s "$HOME/gap/gaprc.sh" ]] && source $HOME/gap/gaprc.sh
    export PATH="/usr/local/bin:$PATH"

    alias ls="ls -FG --color=always"
    alias grep="grep --color=always"
    alias egrep="egrep --color=always"
    alias swap_off="sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist"
    alias swap_on="sudo launchctl load /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist"
    alias swap_rm="sudo rm /private/var/vm/swapfile*"
    # GNU Coreutils
    [ -s "/usr/local/opt/coreutils/libexec/gnubin" ] && export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    [ -s "/usr/local/opt/coreutils/libexec/gnuman" ] && export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
      ;;
  Linux)
    export TERM="xterm-256color"
    alias ls="ls -F --color=auto"
    alias pbcopy="xclip -selection clipboard"
    alias pbpaste="xclip -selection clipboard -o"
    alias docker="sudo docker"
    if [ -s "$HOME/.linuxbrew/bin" ]; then
      export PATH="$HOME/.linuxbrew/bin:$PATH"
      export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
      export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
    fi
    export DOCKER_HOST=tcp://127.0.0.1:4243
    alias xcape_esc="xcape -e \"Control_L=Escape\"";
    hash xcape 2>/dev/null && xcape_esc
    hash ack-grep 2>/dev/null && alias ack="ack-grep"
    ;;
esac

# === docker aliases
alias dockercleancontainers="docker rm \$(docker ps -a -q)"
alias dockercleanimages="docker rmi \$(docker images -q --filter \"dangling=true\")"
alias dockerclean="dockercleancontainers && dockercleanimages"
alias docker-killall="docker kill \$(docker ps -q)"
function docker-get-ip {
  # Usage: docker-get-ip (name or sha)
  [ -n "$1" ] && docker inspect --format "{{ .NetworkSettings.IPAddress }}" $1
}

function docker-get-id {
  # Usage: docker-get-id (friendly-name)
  [ -n "$1" ] && docker inspect --format "{{ .ID }}" $1
}

function docker-get-image {
  # Usage: docker-get-image (friendly-name)
  [ -n "$1" ] && docker inspect --format "{{ .Image }}" $1
}

function docker-get-state {
  # Usage: docker-get-state (friendly-name)
  [ -n "$1" ] && docker inspect --format "{{ .State.Running }}" $1
}

# alias to extract files
extract () {
  set -x
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1       ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
   set +x
 }


# Load RVM, if available
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

# Load NVM, if available
[[ -s "$HOME/.nvm/nvm.sh" ]] && source "$HOME/.nvm/nvm.sh" # This loads nvm

# Loads SCM breeze, if available
[[ -s "$HOME/.scm_breeze/scm_breeze.sh" ]] && source "$HOME/.scm_breeze/scm_breeze.sh"

# Loads jEnv, if available
[[ -s "$HOME/.jenv/bin" ]] && export PATH="$HOME/.jenv/bin:$PATH" && eval "$($HOME/.jenv/bin/jenv init -)"

# set PATH so it includes user's private bin if it exists
[[ -d "$HOME/bin" ]] && PATH="$HOME/bin:$PATH"

# show some quote when opening the terminal
[[ -x /usr/games/fortune ]] && [[ -f ~/quotes.dat ]] && /usr/games/fortune ~/quotes

